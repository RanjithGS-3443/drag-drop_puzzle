* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', system-ui, sans-serif;
}

:root {
    --primary: #6c5ce7;
    --secondary: #a8a4e6;
    --accent: #00cec9;
    --background: #f8f9fa;
    --text: #2d3436;
    --success: #00b894;
    --error: #d63031;
    --shadow: rgba(0, 0, 0, 0.1);
    --radius: 12px;
}

body {
    background: var(--background);
    color: var(--text);
    min-height: 60vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    font-family: system-ui, -apple-system, sans-serif;
    background-color: black;
}

.game-container {
    background: white;
    border-radius: 15px;
    padding: 1.5rem;
    box-shadow: 0 10px 30px var(--shadow);
    max-width: 1100px;
    width: 100%;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
    gap: 1rem;
}

h1 {
    color: var(--primary);
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.moves-counter {
    background: var(--secondary);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    box-shadow: 0 4px 15px var(--shadow);
}

.game-area {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
    margin-bottom: 1.5rem;
    background-color: #07f107;
    padding:5%;
}

.reference-container {
    background: var(--background);
    padding: 1rem;
    border-radius: 15px;
    text-align: center;
}

.reference-container h2 {
    color: var(--primary);
    margin-bottom: 1rem;
    font-size: 1.2rem;
}

#reference {
    width: 100%;
    max-width: 300px;
    border-radius: 10px;
    margin-bottom: 1rem;
}

.instruction {
    color: var(--text);
    font-size: 0.9rem;
    opacity: 0.8;
    margin-top: 0.5rem;
}

.puzzle-area {
    display: grid;
    grid-template-columns: repeat(2, minmax(300px, 1fr));
    gap: 1rem;
    justify-content: center;

}

.puzzle-section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.puzzle-section h3 {
    color: var(--primary);
    font-size: 1.1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.drag-instruction {
    grid-column: 1 / -1;
    text-align: center;
    color: var(--text);
    font-size: 0.9rem;
    margin-bottom: 1rem;
    font-style: italic;
}

#puzzle-board {
    background: var(--background);
    border-radius: 15px;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 0;
    width: 300px;
    height: 300px;
    box-shadow: 0 4px 15px var(--shadow);
    overflow: hidden;
    justify-self: center;
}

#pieces-container {
    background: var(--background);
    border-radius: 12px;
    padding: 2%;
    display: grid;
    grid-template-columns: repeat(3, 100px);
    gap: 2px;
    width: 320px;
    height: 320px;
    box-shadow: 0 4px 15px var(--shadow);
    justify-self: center;
    border: 1px solid black;

}

#puzzle-board.drag-over {
    border-color: var(--accent);
    background-color: rgba(108, 92, 231, 0.1);
}

.puzzle-piece {
    width: 100px;
    height: 100px;
    background-size: 300px 300px;
    border-radius: 0;
    cursor: move;
    transition: transform 0.2s, box-shadow 0.2s;
}

/* Special styling for pieces when they're on the board */
#puzzle-board .puzzle-piece {
    width: 100px;
    height: 100px;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    position: relative;
}

.puzzle-piece::before {
    content: '⋮⋮';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: rgba(255, 255, 255, 0.5);
    font-size: 1.5rem;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.2s;
}

.puzzle-piece:hover::before {
    opacity: 1;
}

.puzzle-piece:hover {
    transform: scale(1.05);
    box-shadow: 0 5px 15px var(--shadow);
}

.puzzle-piece.dragging {
    opacity: 0.8;
    transform: scale(1.1);
    box-shadow: 0 8px 20px var(--shadow);
    cursor: grabbing;
}

.puzzle-piece.correct {
    border: 3px solid var(--success);
    animation: correct 0.5s ease;
}

.puzzle-piece.incorrect {
    border: 3px solid var(--error);
    animation: incorrect 0.5s ease;
}

.controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
}

.btn {
    background: var(--primary);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 50px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: transform 0.2s, background 0.2s;
    box-shadow: 0 4px 15px var(--shadow);
}

.btn:hover {
    background: var(--secondary);
    transform: translateY(-2px);
}

.btn:active {
    transform: translateY(0);
}

.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(5px);
}

.modal.show {
    display: flex;
    animation: fadeIn 0.3s ease;
}

.modal-content {
    background: white;
    padding: 2rem;
    border-radius: 20px;
    text-align: center;
    max-width: 400px;
    width: 90%;
    box-shadow: 0 10px 30px var(--shadow);
    animation: slideUp 0.3s ease;
}

.trophy-icon {
    font-size: 4rem;
    color: gold;
    margin-bottom: 1rem;
    animation: bounce 1s ease infinite;
}

.modal h2 {
    color: var(--primary);
    margin-bottom: 1rem;
}

#completion-message {
    margin-bottom: 1.5rem;
    color: var(--text);
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

@keyframes correct {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

@keyframes incorrect {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
    100% { transform: translateX(0); }
}

/* Mobile Responsive Design */
@media (max-width: 1024px) {
    .game-area {
        grid-template-columns: 1fr;
    }

    .reference-container {
        max-width: 300px;
        margin: 0 auto;
    }
}

@media (max-width: 768px) {
    body {
        padding: 0.5rem;
    }

    .game-container {
        padding: 1rem;
    }

    .puzzle-area {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    #puzzle-board, #pieces-container {
        width: 300px;
        margin: 0 auto;
    }

    .controls {
        flex-direction: column;
        align-items: stretch;
        max-width: 300px;
        margin: 0 auto;
    }

    .btn {
        justify-content: center;
    }
}

@media (max-width: 320px) {
    #puzzle-board, #pieces-container {
        width: 270px;
        height: 270px;
    }

    #puzzle-board {
        grid-template-columns: repeat(3, 90px);
        grid-template-rows: repeat(3, 90px);
    }

    #pieces-container {
        grid-template-columns: repeat(3, 90px);
    }

    .puzzle-piece {
        width: 90px;
        height: 90px;
        background-size: 270px 270px;
    }
}

/* Tilt Phone Message */
.tilt-phone-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 9999;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
    color: white;
    padding: 2rem;
}

.tilt-phone-message h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--accent);
}

.tilt-phone-message p {
    margin-bottom: 1.5rem;
    font-size: 1rem;
}

.tilt-icon {
    font-size: 4rem;
    animation: tilt 2s ease-in-out infinite;
    margin-bottom: 1.5rem;
    display: block;
}

.start-button {
    background: var(--primary);
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 50px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    margin-top: 1.5rem;
}

@keyframes tilt {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(90deg); }
    50% { transform: rotate(90deg); }
    75% { transform: rotate(0deg); }
    100% { transform: rotate(0deg); }
}

@media screen and (orientation: portrait) and (max-width: 768px) {
    .tilt-phone-message {
        display: flex;
    }
    
    .game-container {
        display: none;
    }
}

/* When user dismisses the message or rotates to landscape */
body.game-started .tilt-phone-message {
    display: none;
}

body.game-started .game-container {
    display: block;
} 